$( document ).ready(function() {
	
	function addUserToDashboard(user){
		$.get("/pages/add_user_to_dashboard?user=" + user);
	}
	
	function highlightUserTraits(jobTraits, userTraits){
		var jobIDs = [];
		var userIDs = [];

		for (i = 0; i < jobTraits.length; i++){
			jobIDs.push($(jobTraits[i]).attr('data-job-id'));
		}

		for (i = 0; i < userTraits.length; i++){
			userIDs.push($(userTraits[i]).attr('data-user-id'));
		}

		for (i = 0; i < jobIDs.length; i++) {
			for (j = 0; j < userIDs.length; j++) {
				if (jobIDs[i] == userIDs[j]) {
					$(userTraits[j]).addClass('btn-success');
				}
			}
		}
	}

	//scripting to highlight user traits in the gap analysis
	var jobDiscs = $('#job-discs .job-traits');
	var userDiscs = $('#user-discs .user-traits');
	highlightUserTraits(jobDiscs, userDiscs);

	var jobValues = $('#job-values .job-traits');
	var userValues = $('#user-values .user-traits');
	highlightUserTraits(jobValues, userValues);

	var jobSkills = $('#job-skills .job-traits');
	var userSkills = $('#user-skills .user-traits');
	highlightUserTraits(jobSkills, userSkills);

	//for user typeahead
	var users = gon.users;
	var users = new Bloodhound({
		local: $.map(users, function(user){ 
			return { value: user['first_name'],
			 		 user_id: user['id']
			}; 
		}),
		datumTokenizer: function(datum){
			return Bloodhound.tokenizers.whitespace(datum.value);
		},
		queryTokenizer: Bloodhound.tokenizers.whitespace
	});
 
	// kicks off the loading/processing of `local` and `prefetch`
	users.initialize();
 
	$('#addedUser .typeahead').typeahead({
	  hint: true,
	  highlight: true,
	  minLength: 1
	},
	{
	  name: 'users',
	  displayKey: 'value',
	  // `ttAdapter` wraps the suggestion engine in an adapter that
	  // is compatible with the typeahead jQuery plugin
	  source: users.ttAdapter()
	}).on('typeahead:selected', function (obj, datum) {
	    addUserToDashboard(datum.user_id);
	});
	
	
});